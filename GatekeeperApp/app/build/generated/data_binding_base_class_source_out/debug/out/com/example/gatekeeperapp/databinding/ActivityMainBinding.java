// Generated by view binder compiler. Do not edit!
package com.example.gatekeeperapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gatekeeperapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnConnect;

  @NonNull
  public final Button btnDisconnect;

  @NonNull
  public final Button btnPublish;

  @NonNull
  public final Button btnSubscribe;

  @NonNull
  public final TextView tvClientId;

  @NonNull
  public final TextView tvLastMessage;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final EditText txtMessage;

  @NonNull
  public final EditText txtSubcribe;

  @NonNull
  public final EditText txtTopic;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnConnect,
      @NonNull Button btnDisconnect, @NonNull Button btnPublish, @NonNull Button btnSubscribe,
      @NonNull TextView tvClientId, @NonNull TextView tvLastMessage, @NonNull TextView tvStatus,
      @NonNull EditText txtMessage, @NonNull EditText txtSubcribe, @NonNull EditText txtTopic) {
    this.rootView = rootView;
    this.btnConnect = btnConnect;
    this.btnDisconnect = btnDisconnect;
    this.btnPublish = btnPublish;
    this.btnSubscribe = btnSubscribe;
    this.tvClientId = tvClientId;
    this.tvLastMessage = tvLastMessage;
    this.tvStatus = tvStatus;
    this.txtMessage = txtMessage;
    this.txtSubcribe = txtSubcribe;
    this.txtTopic = txtTopic;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnConnect;
      Button btnConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnConnect == null) {
        break missingId;
      }

      id = R.id.btnDisconnect;
      Button btnDisconnect = ViewBindings.findChildViewById(rootView, id);
      if (btnDisconnect == null) {
        break missingId;
      }

      id = R.id.btnPublish;
      Button btnPublish = ViewBindings.findChildViewById(rootView, id);
      if (btnPublish == null) {
        break missingId;
      }

      id = R.id.btnSubscribe;
      Button btnSubscribe = ViewBindings.findChildViewById(rootView, id);
      if (btnSubscribe == null) {
        break missingId;
      }

      id = R.id.tvClientId;
      TextView tvClientId = ViewBindings.findChildViewById(rootView, id);
      if (tvClientId == null) {
        break missingId;
      }

      id = R.id.tvLastMessage;
      TextView tvLastMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvLastMessage == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.txtMessage;
      EditText txtMessage = ViewBindings.findChildViewById(rootView, id);
      if (txtMessage == null) {
        break missingId;
      }

      id = R.id.txtSubcribe;
      EditText txtSubcribe = ViewBindings.findChildViewById(rootView, id);
      if (txtSubcribe == null) {
        break missingId;
      }

      id = R.id.txtTopic;
      EditText txtTopic = ViewBindings.findChildViewById(rootView, id);
      if (txtTopic == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnConnect, btnDisconnect, btnPublish,
          btnSubscribe, tvClientId, tvLastMessage, tvStatus, txtMessage, txtSubcribe, txtTopic);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
